// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatPacket.SessionPacket
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SessionGameStartPacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SessionGameStartPacket GetRootAsSessionGameStartPacket(ByteBuffer _bb) { return GetRootAsSessionGameStartPacket(_bb, new SessionGameStartPacket()); }
  public static SessionGameStartPacket GetRootAsSessionGameStartPacket(ByteBuffer _bb, SessionGameStartPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifySessionGameStartPacket(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, SessionGameStartPacketVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SessionGameStartPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ServerAddress { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetServerAddressBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetServerAddressBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetServerAddressArray() { return __p.__vector_as_array<byte>(4); }
  public short ServerPortNumber { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }

  public static Offset<FlatPacket.SessionPacket.SessionGameStartPacket> CreateSessionGameStartPacket(FlatBufferBuilder builder,
      StringOffset server_addressOffset = default(StringOffset),
      short server_port_number = 0) {
    builder.StartTable(2);
    SessionGameStartPacket.AddServerAddress(builder, server_addressOffset);
    SessionGameStartPacket.AddServerPortNumber(builder, server_port_number);
    return SessionGameStartPacket.EndSessionGameStartPacket(builder);
  }

  public static void StartSessionGameStartPacket(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddServerAddress(FlatBufferBuilder builder, StringOffset serverAddressOffset) { builder.AddOffset(0, serverAddressOffset.Value, 0); }
  public static void AddServerPortNumber(FlatBufferBuilder builder, short serverPortNumber) { builder.AddShort(1, serverPortNumber, 0); }
  public static Offset<FlatPacket.SessionPacket.SessionGameStartPacket> EndSessionGameStartPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatPacket.SessionPacket.SessionGameStartPacket>(o);
  }
  public static void FinishSessionGameStartPacketBuffer(FlatBufferBuilder builder, Offset<FlatPacket.SessionPacket.SessionGameStartPacket> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedSessionGameStartPacketBuffer(FlatBufferBuilder builder, Offset<FlatPacket.SessionPacket.SessionGameStartPacket> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class SessionGameStartPacketVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*ServerAddress*/, false)
      && verifier.VerifyField(tablePos, 6 /*ServerPortNumber*/, 2 /*short*/, 2, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
