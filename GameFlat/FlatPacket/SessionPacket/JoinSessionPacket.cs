// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatPacket.SessionPacket
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct JoinSessionPacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static JoinSessionPacket GetRootAsJoinSessionPacket(ByteBuffer _bb) { return GetRootAsJoinSessionPacket(_bb, new JoinSessionPacket()); }
  public static JoinSessionPacket GetRootAsJoinSessionPacket(ByteBuffer _bb, JoinSessionPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyJoinSessionPacket(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, JoinSessionPacketVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public JoinSessionPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int SessionId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Uuid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public FlatPacket.SessionPacket.session_information? SessionInfo { get { int o = __p.__offset(8); return o != 0 ? (FlatPacket.SessionPacket.session_information?)(new FlatPacket.SessionPacket.session_information()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<FlatPacket.SessionPacket.JoinSessionPacket> CreateJoinSessionPacket(FlatBufferBuilder builder,
      int session_id = 0,
      int uuid = 0,
      Offset<FlatPacket.SessionPacket.session_information> session_infoOffset = default(Offset<FlatPacket.SessionPacket.session_information>)) {
    builder.StartTable(3);
    JoinSessionPacket.AddSessionInfo(builder, session_infoOffset);
    JoinSessionPacket.AddUuid(builder, uuid);
    JoinSessionPacket.AddSessionId(builder, session_id);
    return JoinSessionPacket.EndJoinSessionPacket(builder);
  }

  public static void StartJoinSessionPacket(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSessionId(FlatBufferBuilder builder, int sessionId) { builder.AddInt(0, sessionId, 0); }
  public static void AddUuid(FlatBufferBuilder builder, int uuid) { builder.AddInt(1, uuid, 0); }
  public static void AddSessionInfo(FlatBufferBuilder builder, Offset<FlatPacket.SessionPacket.session_information> sessionInfoOffset) { builder.AddOffset(2, sessionInfoOffset.Value, 0); }
  public static Offset<FlatPacket.SessionPacket.JoinSessionPacket> EndJoinSessionPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatPacket.SessionPacket.JoinSessionPacket>(o);
  }
  public static void FinishJoinSessionPacketBuffer(FlatBufferBuilder builder, Offset<FlatPacket.SessionPacket.JoinSessionPacket> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedJoinSessionPacketBuffer(FlatBufferBuilder builder, Offset<FlatPacket.SessionPacket.JoinSessionPacket> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class JoinSessionPacketVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*SessionId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Uuid*/, 4 /*int*/, 4, false)
      && verifier.VerifyTable(tablePos, 8 /*SessionInfo*/, FlatPacket.SessionPacket.session_informationVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
