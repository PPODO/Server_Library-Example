// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatPacket.UserPacket
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct UserInformationPacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static UserInformationPacket GetRootAsUserInformationPacket(ByteBuffer _bb) { return GetRootAsUserInformationPacket(_bb, new UserInformationPacket()); }
  public static UserInformationPacket GetRootAsUserInformationPacket(ByteBuffer _bb, UserInformationPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyUserInformationPacket(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, UserInformationPacketVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UserInformationPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short RequestResult { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public int Uuid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NumberOfUnconfirmedMails { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public FlatPacket.item? InventoryList(int j) { int o = __p.__offset(10); return o != 0 ? (FlatPacket.item?)(new FlatPacket.item()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int InventoryListLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<FlatPacket.UserPacket.UserInformationPacket> CreateUserInformationPacket(FlatBufferBuilder builder,
      short request_result = 0,
      int uuid = 0,
      int number_of_unconfirmed_mails = 0,
      VectorOffset inventory_listOffset = default(VectorOffset)) {
    builder.StartTable(4);
    UserInformationPacket.AddInventoryList(builder, inventory_listOffset);
    UserInformationPacket.AddNumberOfUnconfirmedMails(builder, number_of_unconfirmed_mails);
    UserInformationPacket.AddUuid(builder, uuid);
    UserInformationPacket.AddRequestResult(builder, request_result);
    return UserInformationPacket.EndUserInformationPacket(builder);
  }

  public static void StartUserInformationPacket(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddRequestResult(FlatBufferBuilder builder, short requestResult) { builder.AddShort(0, requestResult, 0); }
  public static void AddUuid(FlatBufferBuilder builder, int uuid) { builder.AddInt(1, uuid, 0); }
  public static void AddNumberOfUnconfirmedMails(FlatBufferBuilder builder, int numberOfUnconfirmedMails) { builder.AddInt(2, numberOfUnconfirmedMails, 0); }
  public static void AddInventoryList(FlatBufferBuilder builder, VectorOffset inventoryListOffset) { builder.AddOffset(3, inventoryListOffset.Value, 0); }
  public static VectorOffset CreateInventoryListVector(FlatBufferBuilder builder, Offset<FlatPacket.item>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateInventoryListVectorBlock(FlatBufferBuilder builder, Offset<FlatPacket.item>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInventoryListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<FlatPacket.item>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInventoryListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<FlatPacket.item>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartInventoryListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatPacket.UserPacket.UserInformationPacket> EndUserInformationPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatPacket.UserPacket.UserInformationPacket>(o);
  }
  public static void FinishUserInformationPacketBuffer(FlatBufferBuilder builder, Offset<FlatPacket.UserPacket.UserInformationPacket> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedUserInformationPacketBuffer(FlatBufferBuilder builder, Offset<FlatPacket.UserPacket.UserInformationPacket> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class UserInformationPacketVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*RequestResult*/, 2 /*short*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Uuid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*NumberOfUnconfirmedMails*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfTables(tablePos, 10 /*InventoryList*/, FlatPacket.itemVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
