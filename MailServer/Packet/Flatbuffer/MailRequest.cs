// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Mail
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MailRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static MailRequest GetRootAsMailRequest(ByteBuffer _bb) { return GetRootAsMailRequest(_bb, new MailRequest()); }
  public static MailRequest GetRootAsMailRequest(ByteBuffer _bb, MailRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyMailRequest(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, MailRequestVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MailRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short RequestType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public string ProgramName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProgramNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetProgramNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetProgramNameArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<Mail.MailRequest> CreateMailRequest(FlatBufferBuilder builder,
      short request_type = 0,
      StringOffset program_nameOffset = default(StringOffset)) {
    builder.StartTable(2);
    MailRequest.AddProgramName(builder, program_nameOffset);
    MailRequest.AddRequestType(builder, request_type);
    return MailRequest.EndMailRequest(builder);
  }

  public static void StartMailRequest(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddRequestType(FlatBufferBuilder builder, short requestType) { builder.AddShort(0, requestType, 0); }
  public static void AddProgramName(FlatBufferBuilder builder, StringOffset programNameOffset) { builder.AddOffset(1, programNameOffset.Value, 0); }
  public static Offset<Mail.MailRequest> EndMailRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Mail.MailRequest>(o);
  }
  public static void FinishMailRequestBuffer(FlatBufferBuilder builder, Offset<Mail.MailRequest> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMailRequestBuffer(FlatBufferBuilder builder, Offset<Mail.MailRequest> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class MailRequestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*RequestType*/, 2 /*short*/, 2, false)
      && verifier.VerifyString(tablePos, 6 /*ProgramName*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
